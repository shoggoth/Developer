{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Faults in Core Data\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b0 \cf0 \
Objects, relationships and fetch batches can be faulted.\
AKA futures, promises, lazy loading\
Used for performance\
\
Problem: Stuff can get deleted before you resolve the fault: managedObjectContex.shouldDeleteInaccesibleFaults is usually what you want\
Could also check each object before fetching with a wrapper or something like that\
\
Can now provide a stable view of data that can be updated deterministically, starting with iOS 10\
\

\b Query Generations\

\b0 \
All reads from a context see a single generation of data\
Advance at predictable times that you choose\
Never see "could not fulfil a fault"\
\
Each context knows which generation of data it has from the database.\
Data is merged on save and the context gets the latest generation of the data.\
\
Context chooses the behavior:\
Unpinned (current, default)\
Pin when data first loaded\
Pin to specific generation\
\
Nested contexts are always unpinned and inherit data from parent\
Including pending changes from the parent\
\

\b Concurrency
\b0 \
\
confinementConcurrencyType is deprecated\
always use perform or performAndWait - Actor models\
\
\
\
 \
\
Importer contexts have been used in the past to import data from the web\
These have been on separate stacks to the UI context to keep things responsive\
Meant having more than one PSC\
\
Can now attach both contexts to the same PSC\
\
\
\
Convenience API for common core descriptions:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
PSC.addPersistentStore is new\
\
NSPersistentContainer contains the MOC, PSC and MOC and all the boilerplate to link them up\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
For testing, you're able to override the URL method but it defaults to something sane for each of the platforms.\
\
Also provides convenience for common operations:\
\
viewContext - drives the UI\
performBackgroundTask used for most other cases (uses connection pooling)\
\
\
\
Pin UI context to latest generation and enable automatic merging\
\

\b Generics
\b0 \
\
\
\
\
\

\b Common operations in core data
\b0 \
\
\
\
Simplifications abound wow This is an equivalent of the above:\
\
\
\
Xcode 8 can now generate subclasses automatically\
Generate automatically and written to deriveddata\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
* Get a demo by creating a new app from the master detail app template.\
The demo also has a fetchedresultscontroller\
\
Deleting database files without corruption:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
}